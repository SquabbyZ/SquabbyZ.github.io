<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SquabbyZ的小黑屋</title>
  
  <subtitle>技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.zhuhaifeng.xyz/"/>
  <updated>2019-04-17T02:14:26.886Z</updated>
  <id>http://www.zhuhaifeng.xyz/</id>
  
  <author>
    <name>Squabby Zhu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown简易语法</title>
    <link href="http://www.zhuhaifeng.xyz/2019/04/17/Markdown/"/>
    <id>http://www.zhuhaifeng.xyz/2019/04/17/Markdown/</id>
    <published>2019-04-17T01:44:38.000Z</published>
    <updated>2019-04-17T02:14:26.886Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-什么是-Markdown"><a href="#1-什么是-Markdown" class="headerlink" title="1.什么是 Markdown"></a>1.什么是 Markdown</h1><p>Markdown 是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>深入学习请移步 <a href="http://www.markdown.cn/" target="_blank">Markdown 官网</a></p><h1 id="2-Markdown-语法的优缺点"><a href="#2-Markdown-语法的优缺点" class="headerlink" title="2.Markdown 语法的优缺点"></a>2.Markdown 语法的优缺点</h1><p>优点：</p><p>1、因为是纯文本，所以只要支持 Markdown 的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。<br>2、操作简单。比如:WYSIWYG 编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而 Markdown 只需要在标题内容前加#即可</p><p>缺点：</p><p>1、需要记一些语法（当然，是很简单。五分钟学会）。<br>2、有些平台不支持 Markdown 编辑模式。</p><h1 id="3-Markdown-简易指令，轻松上手"><a href="#3-Markdown-简易指令，轻松上手" class="headerlink" title="3.Markdown 简易指令，轻松上手"></a>3.Markdown 简易指令，轻松上手</h1><h2 id="标题写法"><a href="#标题写法" class="headerlink" title="标题写法"></a>标题写法</h2><p><a href="http://baidu.com" target="_blank">超链接名</a> # 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级标题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-什么是-Markdown&quot;&gt;&lt;a href=&quot;#1-什么是-Markdown&quot; class=&quot;headerlink&quot; title=&quot;1.什么是 Markdown&quot;&gt;&lt;/a&gt;1.什么是 Markdown&lt;/h1&gt;&lt;p&gt;Markdown 是一种纯文本格式的标记语言
      
    
    </summary>
    
    
      <category term="针对于刚入门使用不熟悉的，语法文档" scheme="http://www.zhuhaifeng.xyz/tags/%E9%92%88%E5%AF%B9%E4%BA%8E%E5%88%9A%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E4%B8%8D%E7%86%9F%E6%82%89%E7%9A%84%EF%BC%8C%E8%AF%AD%E6%B3%95%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 入门学习</title>
    <link href="http://www.zhuhaifeng.xyz/2019/04/16/Hexostudy/"/>
    <id>http://www.zhuhaifeng.xyz/2019/04/16/Hexostudy/</id>
    <published>2019-04-16T09:37:13.000Z</published>
    <updated>2019-04-17T07:53:36.883Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-Hexo"><a href="#什么是-Hexo" class="headerlink" title="什么是 Hexo"></a>什么是 Hexo</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="Hexo-搭建步骤"><a href="#Hexo-搭建步骤" class="headerlink" title="Hexo 搭建步骤"></a>Hexo 搭建步骤</h2><ol><li>安装 Git bash (非必须,主要针对于 windows 中不习惯使用 cmd ,编译器是 VsCode 也可以不用这个)</li><li>安装 Node.js</li><li>安装 Hexo</li><li>Github 上创建个人仓库</li><li>生成 SSH 添加到 GitHub</li><li>将 hexo 部署到 GitHub</li><li>将 yourname.github.io 绑定到个人域名</li><li>发布文章</li></ol><h3 id="1-安装-Git"><a href="#1-安装-Git" class="headerlink" title="1. 安装 Git"></a>1. 安装 Git</h3><p>Git 是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的 hexo 博客文章，上传到 GitHub 的工具。Git 非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的 Git 教程写的非常好，大家可以了解一下。Git 教程</p><p>windows：到 git 官网上下载,Download git,下载后会有一个 Git Bash 的命令行工具，以后就用这个工具来使用 git。</p><p>linux：对 linux 来说实在是太简单了，因为最早的 git 就是在 linux 上编写的，只需要一行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure><p>安装好后，用 git –version 来查看一下版本</p><h3 id="2-安装-node-js"><a href="#2-安装-node-js" class="headerlink" title="2.安装 node.js"></a>2.安装 node.js</h3><p>Hexo 是基于 nodeJS 编写的，所以需要安装一下 nodeJs 和里面的 npm 工具。</p><p>windows：nodejs 选择 LTS 版本就行了。</p><p>linux：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 sudo apt-get install nodejs</span><br><span class="line">2 sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>安装完后，打开命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line">1 sudo apt-get install nodejs</span><br><span class="line">2 sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>检查一下有没有安装成功</p><p>顺便说一下，windows 在 git 安装完后，就可以直接使用 git bash 来敲命令行了，不用自带的 cmd，cmd 有点难用。</p><h3 id="3-安装-Hexo"><a href="#3-安装-Hexo" class="headerlink" title="3.安装 Hexo"></a>3.安装 Hexo</h3><p>前面 git 和 nodejs 安装好后，就可以安装 hexo 了，你可以先创建一个文件夹 blog，然后 cd 到这个文件夹下（或者在这个文件夹下直接右键 git bash 打开）。</p><p>输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成之后,有两种方法生成 Hexo demo</p><p>1.自定义创建好一个文件夹，然后在该文件夹下的根目录中打开 Git bash ,或者你使用的编译器是 VS Code 可以直接将该文件夹托人到 VS Code 编辑器中，然后使用命令 Ctrl + ~ 打开终端窗口,输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init (简写 hexo i)</span><br></pre></td></tr></table></figure><p>只需等待 demo 自己加载完即可</p><p>2.相对于方法一来说比较简便,使用 一行代码直接在你当前目录下生成 Hexo Demo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myBlog</span><br></pre></td></tr></table></figure><p>其中 myBlog 是你 Hexo demo 的文件夹的名字。</p><p>新建完成后，指定文件夹目录下有：</p><p>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br><strong> _config.yml: 博客的配置文件</strong></p><p>再使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g (这个是简写,原本的代码为 hexo generate)</span><br></pre></td></tr></table></figure><p>然后再使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s (这个是简写,原本的代码为 hexo server / hexo serve ),默认的端口是 4000,你也可以写成 hexo s -p 8080 ,自己定义本地起 hexo 服务的端口号</span><br></pre></td></tr></table></figure><p>这样你就可以看到在 hexo 本地跑起来的服务了,特别说明下,在本地展示的效果方便于开发，可以实时的看到你所修改的博客界面。</p><h3 id="4-如何将-github-和-hexo-联系起来"><a href="#4-如何将-github-和-hexo-联系起来" class="headerlink" title="4.如何将 github 和 hexo 联系起来?"></a>4.如何将 github 和 hexo 联系起来?</h3><h5 id="1-你需要先配置一下-SSH-key"><a href="#1-你需要先配置一下-SSH-key" class="headerlink" title="1. 你需要先配置一下 SSH key"></a>1. 你需要先配置一下 SSH key</h5><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的 github 权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用 ssh key 来解决本地和服务器的连接问题。</p><blockquote><p>a. 重新打开 Git 命令窗口，输入下面命令:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"git@github.com"</span> //Github 的注册邮箱地址</span><br></pre></td></tr></table></figure><blockquote><p>b. 一路 Enter 过来就好，得到的信息如下:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/user/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure><blockquote><p>找到该文件并打开，复制里面的所有内容，然后进入 Sign in to GitHub：<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a></p></blockquote><blockquote><p>c. 依次执行下面步骤:<br>点击 New SSH key —— Title：blog —— Key：输入刚才复制的 —— Add SSH key</p></blockquote><blockquote><p>d. 测试一下是否成功,输入下方命令:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com //git@github.com</span><br></pre></td></tr></table></figure><blockquote><p>只要看到返回的信息中带有如下内容就说明成功了,</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi SquabbyZ! You<span class="string">'ve successfully authenticated</span></span><br></pre></td></tr></table></figure><h5 id="2-设置-Git-的-user-name-和-email"><a href="#2-设置-Git-的-user-name-和-email" class="headerlink" title="2.设置 Git 的 user name 和 email"></a>2.设置 Git 的 user name 和 email</h5><p>最好是在你当前 Hexo Demo 的目录下 依次执行下面的两个指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"SquabbyZ"</span> // 你的 github 用户名，非昵称</span><br><span class="line">git config --global user.email <span class="string">"git@github.com"</span> // 填写你的 github 注册邮箱</span><br></pre></td></tr></table></figure><h5 id="3-修改参数及配置-deploy-git"><a href="#3-修改参数及配置-deploy-git" class="headerlink" title="3.修改参数及配置 deploy-git"></a>3.修改参数及配置 deploy-git</h5><blockquote><p>a.修改参数<br>下面来简单介绍下 Hexo 项目中的配置文件 _config.yml<br>Hexo 中的一些基本配置都需要在该文件里完成,这里只介绍简单的一些配置项</p></blockquote><blockquote><blockquote><p>① title: SquabbyZ 的小黑屋 //你自己博客的名字<br>② subtitle: 技术博客 //博客副标题<br>③ description: 一只致力于成为全栈的小胖纸 //你博客的描述<br>④ author: Squabby Zhu //博客的作者</p></blockquote></blockquote><blockquote><p>然后把配置文件下拉到最低下后,还有一些配置项需要去修改</p></blockquote><blockquote><blockquote><p>⑤ theme: next //主题文件夹的名字,关于更换主题内容可以直接点击更换主题<br>⑥ deploy: //这里的配置,就是跟 Github 上你要把这个 demo 存入到仓库的配置<br>type: git //类型 github<br>repo: ssh:<a href="mailto://git@github.com" target="_blank" rel="noopener">//git@github.com</a>/SquabbyZ/SquabbyZ.github.io.git<br>//仓库地址，必须这样写 ssh:<a href="mailto://git@github.com" target="_blank" rel="noopener">//git@github.com</a>/yourname/yourname.github.io.git ,注意这里的地址不是昵称。<br>branch: master //仓库分支为:主分支<br>上面这些配置好后,可以在 hexo 本地服务中看到除了 deploy 中修改外的其他修改的内容。</p></blockquote></blockquote><blockquote><p>b.使用 deploy-git 工具,将本地做好的博客上传到 github 仓库中，更新仓库展示内容</p></blockquote><blockquote><blockquote><p>先下载插件 deploy-git，指令如下:</p></blockquote></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>插件下载完成后,按顺序输入如下命令:</p></blockquote></blockquote><blockquote><blockquote><p>① hexo clean //清除了你之前生成的东西，也可以不加<br>② hexo generate //顾名思义，生成静态文章，可以用 hexo g 缩写<br>③ hexo deploy //部署文章，可以用 hexo d 缩写</p></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是-Hexo&quot;&gt;&lt;a href=&quot;#什么是-Hexo&quot; class=&quot;headerlink&quot; title=&quot;什么是 Hexo&quot;&gt;&lt;/a&gt;什么是 Hexo&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎
      
    
    </summary>
    
    
      <category term="主要介绍 Hexo个人博客模板的搭建与Github的连通，以及个人域名绑定" scheme="http://www.zhuhaifeng.xyz/tags/%E4%B8%BB%E8%A6%81%E4%BB%8B%E7%BB%8D-Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8EGithub%E7%9A%84%E8%BF%9E%E9%80%9A%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.zhuhaifeng.xyz/2019/04/16/hello-world/"/>
    <id>http://www.zhuhaifeng.xyz/2019/04/16/hello-world/</id>
    <published>2019-04-16T08:32:34.778Z</published>
    <updated>2019-04-17T06:06:57.375Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
